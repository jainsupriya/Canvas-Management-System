{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n/**\n * Reads any potentially deep value from an object using dot and array syntax\n */\n\nvar read = function read(path, object) {\n  if (!path || !object) {\n    return object;\n  }\n\n  var dotIndex = path.indexOf('.');\n\n  if (dotIndex === 0) {\n    return read(path.substring(1), object);\n  }\n\n  var openIndex = path.indexOf('[');\n  var closeIndex = path.indexOf(']');\n\n  if (dotIndex >= 0 && (openIndex < 0 || dotIndex < openIndex)) {\n    // iterate down object tree\n    return read(path.substring(dotIndex + 1), object[path.substring(0, dotIndex)]);\n  }\n\n  if (openIndex >= 0 && (dotIndex < 0 || openIndex < dotIndex)) {\n    if (closeIndex < 0) {\n      throw new Error('found [ but no ]');\n    }\n\n    var key = path.substring(0, openIndex);\n    var index = path.substring(openIndex + 1, closeIndex);\n\n    if (!index.length) {\n      return object[key];\n    }\n\n    if (openIndex === 0) {\n      return read(path.substring(closeIndex + 1), object[index]);\n    }\n\n    if (!object[key]) {\n      return undefined;\n    }\n\n    return read(path.substring(closeIndex + 1), object[key][index]);\n  }\n\n  return object[path];\n};\n\nexports.default = read;","map":null,"metadata":{},"sourceType":"script"}