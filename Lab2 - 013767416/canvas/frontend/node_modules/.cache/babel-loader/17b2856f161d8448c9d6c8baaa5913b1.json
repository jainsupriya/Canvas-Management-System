{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _isPristine = require('./isPristine');\n\nvar _isPristine2 = _interopRequireDefault(_isPristine);\n\nvar _isValid = require('./isValid');\n\nvar _isValid2 = _interopRequireDefault(_isValid);\n\nvar _isChecked = require('./isChecked');\n\nvar _isChecked2 = _interopRequireDefault(_isChecked);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Updates a field object from the store values\n */\n\n\nvar updateField = function updateField(field, formField, active, syncError) {\n  var diff = {};\n  var formFieldValue = formField.value === undefined ? '' : formField.value; // update field value\n\n  if (field.value !== formFieldValue) {\n    diff.value = formFieldValue;\n    diff.checked = (0, _isChecked2.default)(formFieldValue);\n  } // update dirty/pristine\n\n\n  var pristine = (0, _isPristine2.default)(formFieldValue, formField.initial);\n\n  if (field.pristine !== pristine) {\n    diff.dirty = !pristine;\n    diff.pristine = pristine;\n  } // update field error\n\n\n  var error = syncError || formField.submitError || formField.asyncError;\n\n  if (error !== field.error) {\n    diff.error = error;\n  }\n\n  var valid = (0, _isValid2.default)(error);\n\n  if (field.valid !== valid) {\n    diff.invalid = !valid;\n    diff.valid = valid;\n  }\n\n  if (active !== field.active) {\n    diff.active = active;\n  }\n\n  var touched = !!formField.touched;\n\n  if (touched !== field.touched) {\n    diff.touched = touched;\n  }\n\n  var visited = !!formField.visited;\n\n  if (visited !== field.visited) {\n    diff.visited = visited;\n  }\n\n  var autofilled = !!formField.autofilled;\n\n  if (autofilled !== field.autofilled) {\n    diff.autofilled = autofilled;\n  }\n\n  if ('initial' in formField && formField.initial !== field.initialValue) {\n    field.initialValue = formField.initial;\n  }\n\n  return Object.keys(diff).length ? _extends({}, field, diff) : field;\n};\n\nexports.default = updateField;","map":null,"metadata":{},"sourceType":"script"}