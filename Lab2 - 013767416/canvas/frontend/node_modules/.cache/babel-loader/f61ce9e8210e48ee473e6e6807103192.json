{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.initialState = exports.globalErrorKey = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _initialState, _behaviors;\n\nvar _actionTypes = require('./actionTypes');\n\nvar _mapValues = require('./mapValues');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _read = require('./read');\n\nvar _read2 = _interopRequireDefault(_read);\n\nvar _write = require('./write');\n\nvar _write2 = _interopRequireDefault(_write);\n\nvar _getValuesFromState = require('./getValuesFromState');\n\nvar _getValuesFromState2 = _interopRequireDefault(_getValuesFromState);\n\nvar _initializeState = require('./initializeState');\n\nvar _initializeState2 = _interopRequireDefault(_initializeState);\n\nvar _resetState = require('./resetState');\n\nvar _resetState2 = _interopRequireDefault(_resetState);\n\nvar _setErrors = require('./setErrors');\n\nvar _setErrors2 = _interopRequireDefault(_setErrors);\n\nvar _fieldValue = require('./fieldValue');\n\nvar _normalizeFields = require('./normalizeFields');\n\nvar _normalizeFields2 = _interopRequireDefault(_normalizeFields);\n\nvar _createInitialState = require('./createInitialState');\n\nvar _createInitialState2 = _interopRequireDefault(_createInitialState);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar globalErrorKey = exports.globalErrorKey = '_error';\nvar initialState = exports.initialState = (_initialState = {\n  _active: undefined,\n  _asyncValidating: false\n}, _initialState[globalErrorKey] = undefined, _initialState._initialized = false, _initialState._submitting = false, _initialState._submitFailed = false, _initialState);\nvar behaviors = (_behaviors = {}, _behaviors[_actionTypes.ADD_ARRAY_VALUE] = function (state, _ref) {\n  var path = _ref.path,\n      index = _ref.index,\n      value = _ref.value,\n      fields = _ref.fields;\n  var array = (0, _read2.default)(path, state);\n\n  var stateCopy = _extends({}, state);\n\n  var arrayCopy = array ? [].concat(array) : [];\n  var newValue = value !== null && typeof value === 'object' ? (0, _initializeState2.default)(value, fields || Object.keys(value)) : (0, _fieldValue.makeFieldValue)({\n    value: value\n  });\n\n  if (index === undefined) {\n    arrayCopy.push(newValue);\n  } else {\n    arrayCopy.splice(index, 0, newValue);\n  }\n\n  return (0, _write2.default)(path, arrayCopy, stateCopy);\n}, _behaviors[_actionTypes.AUTOFILL] = function (state, _ref2) {\n  var field = _ref2.field,\n      value = _ref2.value;\n  return (0, _write2.default)(field, function (previous) {\n    var _previous$value$autof = _extends({}, previous, {\n      value: value,\n      autofilled: true\n    }),\n        asyncError = _previous$value$autof.asyncError,\n        submitError = _previous$value$autof.submitError,\n        result = _objectWithoutProperties(_previous$value$autof, ['asyncError', 'submitError']);\n\n    return (0, _fieldValue.makeFieldValue)(result);\n  }, state);\n}, _behaviors[_actionTypes.BLUR] = function (state, _ref3) {\n  var field = _ref3.field,\n      value = _ref3.value,\n      touch = _ref3.touch;\n\n  var _active = state._active,\n      stateCopy = _objectWithoutProperties(state, ['_active']);\n\n  if (_active && _active !== field) {\n    // remove _active from state\n    stateCopy._active = _active;\n  }\n\n  return (0, _write2.default)(field, function (previous) {\n    var result = _extends({}, previous);\n\n    if (value !== undefined) {\n      result.value = value;\n    }\n\n    if (touch) {\n      result.touched = true;\n    }\n\n    return (0, _fieldValue.makeFieldValue)(result);\n  }, stateCopy);\n}, _behaviors[_actionTypes.CHANGE] = function (state, _ref4) {\n  var field = _ref4.field,\n      value = _ref4.value,\n      touch = _ref4.touch;\n  return (0, _write2.default)(field, function (previous) {\n    var _previous$value = _extends({}, previous, {\n      value: value\n    }),\n        asyncError = _previous$value.asyncError,\n        submitError = _previous$value.submitError,\n        autofilled = _previous$value.autofilled,\n        result = _objectWithoutProperties(_previous$value, ['asyncError', 'submitError', 'autofilled']);\n\n    if (touch) {\n      result.touched = true;\n    }\n\n    return (0, _fieldValue.makeFieldValue)(result);\n  }, state);\n}, _behaviors[_actionTypes.DESTROY] = function () {\n  return undefined;\n}, _behaviors[_actionTypes.FOCUS] = function (state, _ref5) {\n  var field = _ref5.field;\n  var stateCopy = (0, _write2.default)(field, function (previous) {\n    return (0, _fieldValue.makeFieldValue)(_extends({}, previous, {\n      visited: true\n    }));\n  }, state);\n  stateCopy._active = field;\n  return stateCopy;\n}, _behaviors[_actionTypes.INITIALIZE] = function (state, _ref6) {\n  var data = _ref6.data,\n      fields = _ref6.fields,\n      overwriteValues = _ref6.overwriteValues;\n  return (0, _createInitialState2.default)(data, fields, state, overwriteValues);\n}, _behaviors[_actionTypes.REMOVE_ARRAY_VALUE] = function (state, _ref7) {\n  var path = _ref7.path,\n      indexOfValue = _ref7.index,\n      predicate = _ref7.predicate;\n  var array = (0, _read2.default)(path, state);\n\n  var stateCopy = _extends({}, state);\n\n  var arrayCopy = array ? [].concat(array) : [];\n  var index = void 0;\n\n  if (predicate) {\n    index = arrayCopy.findIndex(predicate);\n  } else {\n    index = indexOfValue;\n  }\n\n  if (index === undefined) {\n    arrayCopy.pop();\n  } else if (isNaN(index)) {\n    delete arrayCopy[index];\n  } else {\n    arrayCopy.splice(index, 1);\n  }\n\n  return (0, _write2.default)(path, arrayCopy, stateCopy);\n}, _behaviors[_actionTypes.RESET] = function (state) {\n  var _extends2;\n\n  return _extends({}, (0, _resetState2.default)(state), (_extends2 = {\n    _active: undefined,\n    _asyncValidating: false\n  }, _extends2[globalErrorKey] = undefined, _extends2._initialized = state._initialized, _extends2._submitting = false, _extends2._submitFailed = false, _extends2));\n}, _behaviors[_actionTypes.START_ASYNC_VALIDATION] = function (state, _ref8) {\n  var field = _ref8.field;\n  return _extends({}, state, {\n    _asyncValidating: field || true\n  });\n}, _behaviors[_actionTypes.START_SUBMIT] = function (state) {\n  return _extends({}, state, {\n    _submitting: true\n  });\n}, _behaviors[_actionTypes.STOP_ASYNC_VALIDATION] = function (state, _ref9) {\n  var _extends3;\n\n  var errors = _ref9.errors;\n  return _extends({}, (0, _setErrors2.default)(state, errors, 'asyncError'), (_extends3 = {\n    _asyncValidating: false\n  }, _extends3[globalErrorKey] = errors && errors[globalErrorKey], _extends3));\n}, _behaviors[_actionTypes.STOP_SUBMIT] = function (state, _ref10) {\n  var _extends4;\n\n  var errors = _ref10.errors;\n  return _extends({}, (0, _setErrors2.default)(state, errors, 'submitError'), (_extends4 = {}, _extends4[globalErrorKey] = errors && errors[globalErrorKey], _extends4._submitting = false, _extends4._submitFailed = !!(errors && Object.keys(errors).length), _extends4));\n}, _behaviors[_actionTypes.SUBMIT_FAILED] = function (state) {\n  return _extends({}, state, {\n    _submitFailed: true\n  });\n}, _behaviors[_actionTypes.SWAP_ARRAY_VALUES] = function (state, _ref11) {\n  var path = _ref11.path,\n      indexA = _ref11.indexA,\n      indexB = _ref11.indexB;\n  var array = (0, _read2.default)(path, state);\n  var arrayLength = array.length;\n\n  if (indexA === indexB || isNaN(indexA) || isNaN(indexB) || indexA >= arrayLength || indexB >= arrayLength) {\n    return state; // do nothing\n  }\n\n  var stateCopy = _extends({}, state);\n\n  var arrayCopy = [].concat(array);\n  arrayCopy[indexA] = array[indexB];\n  arrayCopy[indexB] = array[indexA];\n  return (0, _write2.default)(path, arrayCopy, stateCopy);\n}, _behaviors[_actionTypes.TOUCH] = function (state, _ref12) {\n  var fields = _ref12.fields;\n  return _extends({}, state, fields.reduce(function (accumulator, field) {\n    return (0, _write2.default)(field, function (value) {\n      return (0, _fieldValue.makeFieldValue)(_extends({}, value, {\n        touched: true\n      }));\n    }, accumulator);\n  }, state));\n}, _behaviors[_actionTypes.UNTOUCH] = function (state, _ref13) {\n  var fields = _ref13.fields;\n  return _extends({}, state, fields.reduce(function (accumulator, field) {\n    return (0, _write2.default)(field, function (value) {\n      if (value) {\n        var touched = value.touched,\n            rest = _objectWithoutProperties(value, ['touched']);\n\n        return (0, _fieldValue.makeFieldValue)(rest);\n      }\n\n      return (0, _fieldValue.makeFieldValue)(value);\n    }, accumulator);\n  }, state));\n}, _behaviors);\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var behavior = behaviors[action.type];\n  return behavior ? behavior(state, action) : state;\n};\n\nfunction formReducer() {\n  var _extends10;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var form = action.form,\n      key = action.key,\n      rest = _objectWithoutProperties(action, ['form', 'key']); // eslint-disable-line no-redeclare\n\n\n  if (!form) {\n    return state;\n  }\n\n  if (key) {\n    var _extends7, _extends8;\n\n    if (action.type === _actionTypes.DESTROY) {\n      var _extends6;\n\n      return _extends({}, state, (_extends6 = {}, _extends6[form] = state[form] && Object.keys(state[form]).reduce(function (accumulator, stateKey) {\n        var _extends5;\n\n        return stateKey === key ? accumulator : _extends({}, accumulator, (_extends5 = {}, _extends5[stateKey] = state[form][stateKey], _extends5));\n      }, {}), _extends6));\n    }\n\n    return _extends({}, state, (_extends8 = {}, _extends8[form] = _extends({}, state[form], (_extends7 = {}, _extends7[key] = reducer((state[form] || {})[key], rest), _extends7)), _extends8));\n  }\n\n  if (action.type === _actionTypes.DESTROY) {\n    return Object.keys(state).reduce(function (accumulator, formName) {\n      var _extends9;\n\n      return formName === form ? accumulator : _extends({}, accumulator, (_extends9 = {}, _extends9[formName] = state[formName], _extends9));\n    }, {});\n  }\n\n  return _extends({}, state, (_extends10 = {}, _extends10[form] = reducer(state[form], rest), _extends10));\n}\n/**\n * Adds additional functionality to the reducer\n */\n\n\nfunction decorate(target) {\n  target.plugin = function plugin(reducers) {\n    var _this = this; // use 'function' keyword to enable 'this'\n\n\n    return decorate(function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var result = _this(state, action);\n\n      return _extends({}, result, (0, _mapValues2.default)(reducers, function (pluginReducer, key) {\n        return pluginReducer(result[key] || initialState, action);\n      }));\n    });\n  };\n\n  target.normalize = function normalize(normalizers) {\n    var _this2 = this; // use 'function' keyword to enable 'this'\n\n\n    return decorate(function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var result = _this2(state, action);\n\n      return _extends({}, result, (0, _mapValues2.default)(normalizers, function (formNormalizers, form) {\n        var runNormalize = function runNormalize(previous, currentResult) {\n          var previousValues = (0, _getValuesFromState2.default)(_extends({}, initialState, previous));\n\n          var formResult = _extends({}, initialState, currentResult);\n\n          var values = (0, _getValuesFromState2.default)(formResult);\n          return (0, _normalizeFields2.default)(formNormalizers, formResult, previous, values, previousValues);\n        };\n\n        if (action.key) {\n          var _extends11;\n\n          return _extends({}, result[form], (_extends11 = {}, _extends11[action.key] = runNormalize(state[form][action.key], result[form][action.key]), _extends11));\n        }\n\n        return runNormalize(state[form], result[form]);\n      }));\n    });\n  };\n\n  return target;\n}\n\nexports.default = decorate(formReducer);","map":null,"metadata":{},"sourceType":"script"}