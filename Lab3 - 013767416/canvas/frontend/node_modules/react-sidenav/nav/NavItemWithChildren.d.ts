import * as React from 'react';
import { INavItemProp } from "react-sidenav/types/INavItemProp";
import { ISideNavContext, INavProp } from "react-sidenav/types";
export declare type NavPropWithChildren = INavProp & {
    children?: React.ReactNode | React.ReactNode[];
};
interface INavItemChildrenProp {
    children: React.ReactElement<NavPropWithChildren> | Array<React.ReactElement<NavPropWithChildren>>;
}
export declare type NavItemWithChildrenProp = INavItemProp & {
    parentPathId: string;
    nonNavChildren: any;
    context: ISideNavContext;
} & INavItemChildrenProp;
export declare class NavItemWithChildren extends React.Component<NavItemWithChildrenProp> {
    state: {
        isExpanded: boolean;
        isHovered: boolean;
    };
    constructor(props: NavItemWithChildrenProp);
    onClick: () => void;
    onMouseEnter: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
    onMouseLeave: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
    toggleHovered: () => void;
    toggleExpand: () => void;
    render(): JSX.Element;
}
export {};
