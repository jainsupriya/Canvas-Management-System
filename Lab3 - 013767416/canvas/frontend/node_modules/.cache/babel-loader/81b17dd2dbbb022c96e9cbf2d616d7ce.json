{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _isEvent = require('./isEvent');\n\nvar _isEvent2 = _interopRequireDefault(_isEvent);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, isReactNative) {\n  if ((0, _isEvent2.default)(event)) {\n    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    if (isReactNative && event.nativeEvent !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    var _event$target = event.target,\n        type = _event$target.type,\n        value = _event$target.value,\n        checked = _event$target.checked,\n        files = _event$target.files,\n        dataTransfer = event.dataTransfer;\n\n    if (type === 'checkbox') {\n      return checked;\n    }\n\n    if (type === 'radio') {\n      return checked ? value : '';\n    }\n\n    if (type === 'file') {\n      return files || dataTransfer && dataTransfer.files;\n    }\n\n    if (type === 'select-multiple') {\n      return getSelectedValues(event.target.options);\n    }\n\n    if (value !== '' && (type === 'number' || type === 'range')) {\n      return parseFloat(value);\n    }\n\n    return value;\n  } // not an event, so must be either our value or an object containing our value in the 'value' key\n\n\n  return event && typeof event === 'object' && Object.keys(event).length === 1 && event.value !== undefined ? event.value : // extract value from { value: value } structure. https://github.com/nikgraf/belle/issues/58\n  event;\n};\n\nexports.default = getValue;","map":null,"metadata":{},"sourceType":"script"}