{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _fieldValue = require('./fieldValue');\n/**\n * A different version of getValues() that does not need the fields array\n */\n\n\nvar getValuesFromState = function getValuesFromState(state) {\n  if (!state) {\n    return state;\n  }\n\n  var keys = Object.keys(state);\n\n  if (!keys.length) {\n    return undefined;\n  }\n\n  return keys.reduce(function (accumulator, key) {\n    var field = state[key];\n\n    if (field) {\n      if ((0, _fieldValue.isFieldValue)(field)) {\n        if (field.value !== undefined) {\n          accumulator[key] = field.value;\n        }\n      } else if (Array.isArray(field)) {\n        accumulator[key] = field.map(function (arrayField) {\n          return (0, _fieldValue.isFieldValue)(arrayField) ? arrayField.value : getValuesFromState(arrayField);\n        });\n      } else if (typeof field === 'object') {\n        var result = getValuesFromState(field);\n\n        if (result && Object.keys(result).length > 0) {\n          accumulator[key] = result;\n        }\n      }\n    }\n\n    return accumulator;\n  }, {});\n};\n\nexports.default = getValuesFromState;","map":null,"metadata":{},"sourceType":"script"}