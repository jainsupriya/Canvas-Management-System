{"ast":null,"code":"import _defineProperty from \"/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/src/components/Grades/Grades.js\";\nimport React, { Component } from 'react';\nimport \"react-web-tabs/dist/react-web-tabs.css\";\nimport { Table } from 'reactstrap';\nimport Moment from 'react-moment';\nimport Grid from '@material-ui/core/Grid';\nimport MiniDrawer from '../Layout/MiniDrawer';\nimport Sidebar from '../Layout/Sidebar';\nimport Appbar from '../Layout/Appbar';\nimport MenuList from '../Layout/MenuList';\nimport { Typography } from '@material-ui/core';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport 'react-table/react-table.css';\n\nvar axios = require('axios');\n\nvar Grades =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Grades, _Component);\n\n  function Grades(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Grades);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grades).call(this, props));\n\n    _this.toggleComponent = function () {\n      _this.setState(function (state) {\n        return {\n          show: !state.show\n        };\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var coursearray = _this.props.courseStore.result;\n      var courseid = localStorage.getItem(\"courseid\");\n\n      if (coursearray) {\n        var coursedetail = coursearray.filter(function (course) {\n          return course._id === courseid;\n        });\n\n        _this.setState({\n          course: coursedetail[0]\n        });\n      }\n    };\n\n    _this.state = (_this$state = {\n      show: false,\n      count: 0,\n      role: localStorage.getItem(\"role\"),\n      assignmentsgrades: [],\n      username: '',\n      totalPoints: '',\n      course: []\n    }, _defineProperty(_this$state, \"course\", ''), _defineProperty(_this$state, \"assignments\", []), _defineProperty(_this$state, \"quizgrades\", []), _this$state);\n    return _this;\n  }\n\n  _createClass(Grades, [{\n    key: \"calculateTotal\",\n    value: function calculateTotal(marks) {\n      console.log('hello');\n      var total = this.state.totalPoints + marks;\n      this.setState({\n        totalPoints: total\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.defaults.withCredentials = true;\n      axios.get('/grades/assignments', {\n        params: {\n          id: localStorage.getItem(\"courseid\")\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        if (res.status === 200) _this2.setState({\n          assignmentsgrades: res.data\n        });\n      });\n      axios.defaults.withCredentials = true;\n      axios.get('/grades/quizzes', {\n        params: {\n          id: localStorage.getItem(\"courseid\")\n        }\n      }).then(function (res) {\n        if (res.status === 200) _this2.setState({\n          quizgrades: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var redirectVar = null;\n      if (!this.props.loginstatus.loginstatus) redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n      var assignmentTotalMarks = 0;\n      var assignmentMarksObtained = 0;\n      var assignmentPercentages = 0;\n      var quizTotalMarks = 0;\n      var quizMarksObtained = 0;\n      var quizPercentages = 0; //const columns = this.getColumns();\n\n      var data = Array.from(this.state.assignmentsgrades).map(function (assign, key) {\n        assignmentTotalMarks = assignmentTotalMarks + assign.Points;\n        assignmentMarksObtained = assignmentMarksObtained + assign.MarksObtained;\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, assign.AssignmentName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \" \", React.createElement(Moment, {\n          format: \"ll\",\n          date: new Date(assign.Duedate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), \" at  \", React.createElement(Moment, {\n          format: \"LT\",\n          date: new Date(assign.Duedate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, assign.MarksObtained), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, assign.Points));\n      });\n      var quizdata = Array.from(this.state.quizgrades).map(function (quiz, key) {\n        quizTotalMarks = quizTotalMarks + quiz.Totalmarks;\n        quizMarksObtained = quizMarksObtained + quiz.MarksObtained;\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, quiz.Quizname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \" \", React.createElement(Moment, {\n          format: \"ll\",\n          date: new Date(quiz.Duedate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), \" at  \", React.createElement(Moment, {\n          format: \"LT\",\n          date: new Date(quiz.Duedate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, quiz.MarksObtained), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, quiz.Totalmarks));\n      });\n      assignmentPercentages = assignmentMarksObtained / assignmentTotalMarks * 100;\n      console.log(assignmentPercentages);\n\n      if (isNaN(assignmentPercentages)) {\n        assignmentPercentages = 0;\n      }\n\n      quizPercentages = quizMarksObtained / quizTotalMarks * 100;\n      if (isNaN(quizPercentages)) quizPercentages = 0;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, redirectVar, React.createElement(Appbar, {\n        name: this.state.course.Name,\n        dept: this.state.course.Dept,\n        nickname: this.state.course.Nickname,\n        term: this.state.course.Term,\n        tag: \"Grades\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 0.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(MiniDrawer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 1.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(MenuList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginLeft: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), localStorage.getItem(\"role\") === 'Student' && React.createElement(Typography, {\n        variant: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Grades for \", this.state.username), localStorage.getItem(\"role\") === 'Student' && React.createElement(Table, {\n        size: \"sm\",\n        style: {\n          marginTop: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        style: {\n          color: \"#094D98\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Due Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Score\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Out Of\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, data, quizdata, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Assignment\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \" \", assignmentPercentages, \"%\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \" \", assignmentMarksObtained, \"/\", assignmentTotalMarks)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Quiz\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" \", quizPercentages, \"%\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \" \", quizMarksObtained, \"/\", quizTotalMarks)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })))))), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Grades;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    courseStore: state.courses,\n    loginstatus: state.loginstatus\n  };\n}\n\nexport default connect(mapStateToProps, {})(Grades);","map":{"version":3,"sources":["/Users/supriyajain/Desktop/273/canvas/tmp_CMPE273-SP19-18/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/src/components/Grades/Grades.js"],"names":["React","Component","Table","Moment","Grid","MiniDrawer","Sidebar","Appbar","MenuList","Typography","Redirect","connect","axios","require","Grades","props","toggleComponent","setState","state","show","componentDidMount","coursearray","courseStore","result","courseid","localStorage","getItem","coursedetail","filter","course","_id","count","role","assignmentsgrades","username","totalPoints","marks","console","log","total","defaults","withCredentials","get","params","id","then","res","data","status","quizgrades","redirectVar","loginstatus","assignmentTotalMarks","assignmentMarksObtained","assignmentPercentages","quizTotalMarks","quizMarksObtained","quizPercentages","Array","from","map","assign","key","Points","MarksObtained","AssignmentName","Date","Duedate","quizdata","quiz","Totalmarks","Quizname","isNaN","Name","Dept","Nickname","Term","marginLeft","marginTop","color","mapStateToProps","courses"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"react-web-tabs/dist/react-web-tabs.css\";\r\nimport { Table } from 'reactstrap';\r\nimport Moment from 'react-moment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MiniDrawer from '../Layout/MiniDrawer';\r\nimport Sidebar from '../Layout/Sidebar';\r\nimport Appbar from '../Layout/Appbar';\r\nimport MenuList from '../Layout/MenuList';\r\nimport { Typography } from '@material-ui/core';\r\nimport {Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport 'react-table/react-table.css'\r\nconst axios = require('axios');\r\n\r\nclass Grades extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n      super(props);\r\n      this.state = {\r\n        show: false,\r\n        count: 0,\r\n        role:localStorage.getItem(\"role\"),\r\n        assignmentsgrades:[],\r\n        username:'',\r\n        totalPoints:'',\r\n        course:[],\r\n        course:'',\r\n        assignments:[],\r\n        quizgrades:[]\r\n      };\r\n    }\r\n      toggleComponent = () => {\r\n        this.setState(state => ({\r\n          show: !state.show\r\n        }));\r\n      };\r\n      calculateTotal(marks)\r\n      {\r\n        console.log('hello')\r\n        var total = this.state.totalPoints+ marks;\r\n        this.setState({totalPoints: total})\r\n      }\r\n      componentWillMount()\r\n      {   \r\n        axios.defaults.withCredentials = true;\r\n        axios.get('/grades/assignments',  {params : {id :localStorage.getItem(\"courseid\")}} ).then(\r\n          res => {\r\n            console.log(res.data)\r\n            if(res.status ===200)\r\n                this.setState({assignmentsgrades: res.data,\r\n                });\r\n          }\r\n        )\r\n                \r\n        axios.defaults.withCredentials = true;\r\n        axios.get('/grades/quizzes',  {params : {id :localStorage.getItem(\"courseid\")}} ).then(\r\n          res => {\r\n            if(res.status ===200)\r\n                this.setState({quizgrades: res.data,\r\n                });\r\n          }\r\n        )\r\n      }\r\n      componentDidMount = () => {\r\n        var coursearray = this.props.courseStore.result;\r\n        var courseid = localStorage.getItem(\"courseid\");\r\n        if(coursearray)\r\n        {\r\n          let coursedetail = coursearray.filter(course => {\r\n            return course._id === courseid });\r\n          this.setState({course:coursedetail[0]});\r\n        }\r\n      }\r\n\r\n\r\n\r\n  render() {\r\n    let redirectVar = null;\r\n    if(!this.props.loginstatus.loginstatus) \r\n      redirectVar = <Redirect to= \"/login\"/>\r\n\r\n    var assignmentTotalMarks =0; \r\n    var assignmentMarksObtained=0;\r\n    var assignmentPercentages=0;\r\n    var quizTotalMarks =0; \r\n    var quizMarksObtained=0;\r\n    var quizPercentages=0;\r\n    //const columns = this.getColumns();\r\n        var data =  Array.from(this.state.assignmentsgrades).map((assign, key) => {\r\n          assignmentTotalMarks = assignmentTotalMarks +  assign.Points;\r\n          assignmentMarksObtained = assignmentMarksObtained +  assign.MarksObtained;\r\n            return (\r\n              <tr key = {key} >                   \r\n              <td >{assign.AssignmentName}</td>\r\n              <td> <Moment format=\"ll\" date={new Date(assign.Duedate)}/> at  <Moment format=\"LT\" date={new Date(assign.Duedate)} /></td>\r\n              <td>{assign.MarksObtained}</td>\r\n              <td>{assign.Points}</td>\r\n              </tr>\r\n            )\r\n        });  \r\n        var quizdata =  Array.from(this.state.quizgrades).map((quiz, key) => {\r\n          quizTotalMarks = quizTotalMarks +  quiz.Totalmarks;\r\n          quizMarksObtained = quizMarksObtained +  quiz.MarksObtained;\r\n            return (\r\n              <tr key = {key} >                   \r\n              <td >{quiz.Quizname}</td>\r\n              <td> <Moment format=\"ll\" date={new Date(quiz.Duedate)}/> at  <Moment format=\"LT\" date={new Date(quiz.Duedate)} /></td>\r\n              <td>{quiz.MarksObtained}</td>\r\n              <td>{quiz.Totalmarks}</td>\r\n              </tr>\r\n            )\r\n        }); \r\n        assignmentPercentages=(assignmentMarksObtained/assignmentTotalMarks)*100;\r\n        console.log(assignmentPercentages)\r\n\r\n        if(isNaN(assignmentPercentages))\r\n         { \r\n           assignmentPercentages = 0;\r\n         }\r\n        quizPercentages=(quizMarksObtained/quizTotalMarks)*100;\r\n          if(isNaN(quizPercentages))\r\n              quizPercentages = 0;\r\n      return (\r\n        <div>{redirectVar}\r\n        <Appbar name={this.state.course.Name}  dept={this.state.course.Dept}  nickname={this.state.course.Nickname}  term={this.state.course.Term}\r\n            tag=\"Grades\" />\r\n        <Grid container>   \r\n          <Grid item xs={0.5}>\r\n            <MiniDrawer/>\r\n          </Grid>  \r\n          <Grid item xs={1.5}><br/>\r\n            <MenuList />\r\n          </Grid>                  \r\n        <Grid item xs={8}>\r\n        <br/>\r\n        <div style={{marginLeft:30}}>\r\n        <br/><br/><br/>\r\n        {localStorage.getItem(\"role\")==='Student' && <Typography variant=\"headline\">Grades for {this.state.username}</Typography>}\r\n        {localStorage.getItem(\"role\")==='Student' && <Table  size=\"sm\" style={{marginTop:70}}>\r\n          <thead style={{color: \"#094D98\"}}>\r\n              <tr>\r\n              <th>Name</th>\r\n              <th>Due Date</th>\r\n              <th>Score</th>\r\n              <th>Out Of</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              {data}\r\n              {quizdata}\r\n              <tr>                   \r\n              <th>Assignment</th>\r\n              <td></td>\r\n              <td> {assignmentPercentages}%</td>\r\n              <td> {assignmentMarksObtained}/{assignmentTotalMarks}</td>\r\n              </tr>\r\n              <tr>                   \r\n              <th>Quiz</th>\r\n              <td></td>\r\n              <td> {quizPercentages}%</td>\r\n              <td> {quizMarksObtained}/{quizTotalMarks}</td>\r\n              </tr>\r\n\r\n              <tr><td></td><td></td><td></td><td></td></tr>\r\n          </tbody>\r\n      </Table> }\r\n        </div>\r\n      </Grid>\r\n       <Grid item xs={1}>\r\n       <Sidebar/>\r\n       </Grid>\r\n     </Grid>\r\n   </div>        \r\n      );    \r\n    \r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return { courseStore: state.courses ,\r\n    loginstatus: state.loginstatus,};\r\n}\r\n\r\nexport default connect(mapStateToProps,{ })(Grades);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}