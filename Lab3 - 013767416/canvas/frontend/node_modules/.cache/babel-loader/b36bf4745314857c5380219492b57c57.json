{"ast":null,"code":"import _classCallCheck from \"/Users/supriyajain/Desktop/273/Github/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/supriyajain/Desktop/273/Github/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/supriyajain/Desktop/273/Github/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/supriyajain/Desktop/273/Github/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/supriyajain/Desktop/273/Github/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/supriyajain/Desktop/273/Github/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/src/components/CourseDetails/Assignment/AssignmentSubmission.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Button from 'react-bootstrap/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Submitassign from './Submitassign';\nimport Parser from 'html-react-parser';\nimport moment from 'moment';\nimport GradeAssignment from './GradeAssignment';\nimport Moment from 'react-moment';\nimport LongMenu from '../../Layout/LongMenu';\nimport { connect } from 'react-redux';\n\nvar axios = require('axios');\n\nvar AssignmentSubmission =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AssignmentSubmission, _Component);\n\n  function AssignmentSubmission(props) {\n    var _this;\n\n    _classCallCheck(this, AssignmentSubmission);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignmentSubmission).call(this, props));\n\n    _this.cancelSubmit = function () {\n      _this.setState({\n        submit: false,\n        attempted: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        submit: false\n      });\n    };\n\n    _this.handleSubmit = function () {\n      if (localStorage.getItem(\"role\") === 'Teacher') {\n        axios.defaults.withCredentials = true;\n        axios.put('/updateAssignment', {\n          params: {\n            id: _this.props.assignmentid\n          }\n        }).then(function (res) {\n          if (res.status === 200) {\n            console.log(\"updated\");\n\n            _this.setState({\n              submit: true\n            });\n          }\n        });\n      } else _this.setState({\n        submit: true\n      });\n    };\n\n    _this.handleCheck = function () {\n      if (localStorage.getItem(\"role\") === 'Teacher') {\n        _this.setState({\n          grade: true\n        });\n      }\n    };\n\n    _this.handleClick = function () {\n      axios.defaults.withCredentials = true;\n      axios.get('/submission/getAllSubmissions', {\n        params: {\n          id: _this.props.assignmentid\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          console.log(res.data);\n\n          _this.setState({\n            opensubmission: true,\n            submissions: res.data\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      title: '',\n      dueDate: '',\n      content: '',\n      points: '',\n      type: '',\n      submit: false,\n      role: localStorage.getItem(\"role\"),\n      attempted: false,\n      submissiontime: '',\n      filename: '',\n      grade: false,\n      opensubmission: false,\n      submissions: [],\n      assignmentsdata: []\n    };\n    return _this;\n  }\n\n  _createClass(AssignmentSubmission, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // get already populated assignment data from redux store.\n      var assignmentarray = this.props.assignments.assignments; //filter this array and fetch information with current \n\n      var assignment = assignmentarray.filter(function (assignment) {\n        return assignment._id === _this2.props.assignmentid;\n      });\n      this.setState({\n        title: assignment[0].Name,\n        points: assignment[0].Points,\n        content: \"Submit on time\",\n        type: \"Online\",\n        dueDate: assignment[0].DueDate\n      });\n      console.log(this.props.assignmentid);\n      axios.get('/submission/', {\n        params: {\n          id: this.props.assignmentid\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          console.log(res.data);\n          if (res.data === \"No Submissions\") _this2.setState({\n            attempted: false\n          });else {\n            console.log(res.data);\n\n            _this2.setState({\n              attempted: true,\n              filename: res.data.Filename,\n              submissiontime: res.data.Submissiontime\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var now = moment();\n\n      if (this.state.grade) {\n        return React.createElement(GradeAssignment, {\n          points: this.state.points,\n          assignmentid: this.props.assignmentid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        });\n      } else {\n        var data = Array.from(this.state.submissions).map(function (submission, key) {\n          return React.createElement(\"tr\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this3.handleOpenFile();\n            },\n            download: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, submission.Filename)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \" \", React.createElement(Moment, {\n            format: \"lll\",\n            date: new Date(submission.Submissiontime),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, localStorage.getItem(\"role\") === 'Teacher' && React.createElement(LongMenu, {\n            delete: function _delete() {\n              return _this3.handleDelete();\n            },\n            edit: function edit() {\n              return _this3.handleEdit();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          })));\n        });\n        return React.createElement(\"div\", {\n          className: \"center-align container mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, this.state.title)), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, this.state.role === 'Student' && now.isBefore(moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && React.createElement(Button, {\n          variant: \"primary\",\n          onClick: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \" \", localStorage.getItem(\"role\") === 'Student' && this.state.attempted ? \"Re\" : \"\", \" \", localStorage.getItem(\"role\") === 'Teacher' ? \"Publish\" : \"Submit\", \" Assignment\")))), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Due: \"), \" \", React.createElement(Moment, {\n          format: \"ll\",\n          date: new Date(this.state.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), \" at  \", React.createElement(Moment, {\n          format: \"LT\",\n          date: new Date(this.state.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Points:\"), this.state.points), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        })), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Submission Type:\"), this.state.type), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        })), this.state.attempted && this.state.role === 'Student' && React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \" \", React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Submitted...!!!\"), \" \", React.createElement(\"a\", {\n          style: {\n            color: \"#094D98\"\n          },\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Submission Details\"), \" \", React.createElement(\"a\", {\n          style: {\n            color: \"#094D98\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Download File\")))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, Parser(this.state.content))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, this.state.role === 'Teacher' && now.isBefore(moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && React.createElement(Button, {\n          variant: \"primary\",\n          onClick: this.handleCheck,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \" Grade Assignment\")), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, this.state.submit && React.createElement(Submitassign, {\n          courseid: this.props.courseid,\n          assignmentid: this.props.assignmentid,\n          cancelSubmit: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        })), this.state.opensubmission && React.createElement(\"table\", {\n          cellpadding: \"0\",\n          cellspacing: \"0\",\n          className: \"table\",\n          cellSpacing: \"1\",\n          style: {\n            marginLeft: 20,\n            paddingTop: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          style: {\n            color: \"#094D98\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"File Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"Submission time\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        })), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, data), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return AssignmentSubmission;\n}(Component); //\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    assignments: state.assignments\n  };\n};\n\nexport default connect(mapStateToProps, {})(AssignmentSubmission);","map":{"version":3,"sources":["/Users/supriyajain/Desktop/273/Github/CMPE273-SP19-18/Lab3 - 013767416/canvas/frontend/src/components/CourseDetails/Assignment/AssignmentSubmission.js"],"names":["React","Component","Container","Row","Col","Button","Divider","Submitassign","Parser","moment","GradeAssignment","Moment","LongMenu","connect","axios","require","AssignmentSubmission","props","cancelSubmit","setState","submit","attempted","handleClose","handleSubmit","localStorage","getItem","defaults","withCredentials","put","params","id","assignmentid","then","res","status","console","log","handleCheck","grade","handleClick","get","data","opensubmission","submissions","state","title","dueDate","content","points","type","role","submissiontime","filename","assignmentsdata","assignmentarray","assignments","assignment","filter","_id","Name","Points","DueDate","Filename","Submissiontime","now","Array","from","map","submission","key","handleOpenFile","Date","handleDelete","handleEdit","isBefore","color","courseid","marginLeft","paddingTop","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Submitassign from './Submitassign';\r\nimport Parser from 'html-react-parser';\r\nimport moment from 'moment';\r\nimport GradeAssignment from './GradeAssignment';\r\nimport Moment from 'react-moment';\r\nimport LongMenu from '../../Layout/LongMenu';\r\nimport { connect } from 'react-redux';\r\n\r\nconst axios = require('axios');\r\n\r\nclass AssignmentSubmission extends Component \r\n{\r\n\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.state = {\r\n        title:'',\r\n        dueDate:'',\r\n        content:'',\r\n        points:'',\r\n        type:'',\r\n        submit:false,\r\n        role:localStorage.getItem(\"role\"),\r\n        attempted:false,\r\n        submissiontime:'',\r\n        filename:'',\r\n        grade:false,\r\n        opensubmission:false,\r\n        submissions:[],\r\n        assignmentsdata:[]\r\n        \r\n      };\r\n  }\r\n  cancelSubmit = () => {\r\n    this.setState({submit : false,attempted:true\r\n    });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({submit : false\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    if(localStorage.getItem(\"role\")==='Teacher')\r\n    {\r\n      axios.defaults.withCredentials = true;\r\n      axios.put('/updateAssignment', {params : {id : this.props.assignmentid}} ).then(\r\n        res => {\r\n          if(res.status === 200)\r\n          {\r\n              console.log(\"updated\");\r\n              this.setState({submit:true});\r\n          }\r\n        }\r\n      )\r\n    }\r\n    else\r\n      this.setState({submit:true});   \r\n  };\r\n\r\n  handleCheck=()=>\r\n  {\r\n    if(localStorage.getItem(\"role\")==='Teacher')\r\n    {\r\n      this.setState({grade:true})\r\n    }   \r\n  }\r\n  handleClick=()=>\r\n  {\r\n\r\n    axios.defaults.withCredentials = true;\r\n    axios.get('/submission/getAllSubmissions',  {params : {id : this.props.assignmentid}} )\r\n      .then(res=>{\r\n        if(res.status === 200)\r\n        {\r\n          console.log(res.data)\r\n          this.setState({opensubmission:true,\r\n          submissions:res.data})\r\n         \r\n        }\r\n      })\r\n  }\r\n\r\n  componentDidMount()\r\n  {   \r\n    // get already populated assignment data from redux store.\r\n    var assignmentarray = this.props.assignments.assignments;\r\n    //filter this array and fetch information with current \r\n    let assignment = assignmentarray.filter(assignment => {\r\n      return assignment._id === this.props.assignmentid });\r\n\r\n    this.setState({\r\n      title:assignment[0].Name,\r\n      points:assignment[0].Points,\r\n      content:\"Submit on time\",\r\n      type:\"Online\",\r\n      dueDate:assignment[0].DueDate\r\n    });\r\n    console.log(this.props.assignmentid)\r\n    axios.get('/submission/', {params : {id : this.props.assignmentid}} ).then(\r\n      res => {\r\n        if(res.status === 200)\r\n        {\r\n            console.log(res.data)\r\n            if(res.data===\"No Submissions\")               \r\n              this.setState({ attempted:false});\r\n            else\r\n            {\r\n              console.log(res.data);\r\n              this.setState({ attempted:true,\r\n              filename:res.data.Filename,\r\n              submissiontime:res.data.Submissiontime});\r\n            }            \r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const now = moment();\r\n      if(this.state.grade){\r\n        return(<GradeAssignment  points={this.state.points} assignmentid={this.props.assignmentid}/>);\r\n      }\r\n      else{\r\n\r\n\r\n        var data =  Array.from(this.state.submissions).map((submission, key) => {\r\n          return (\r\n            <tr key = {key} >                   \r\n            <td ><a onClick={() =>this.handleOpenFile()} download>{submission.Filename}</a></td>\r\n            <td> <Moment format=\"lll\" date={new Date(submission.Submissiontime)}/> </td>\r\n            <td>{ localStorage.getItem(\"role\")==='Teacher' && <LongMenu delete={() =>this.handleDelete()} edit={() =>this.handleEdit()}/>}</td>\r\n            </tr>\r\n          )\r\n          });\r\n          \r\n          \r\n      return (  \r\n        <div className=\"center-align container mt-5\">\r\n        <Container>\r\n          <Row>\r\n            <Col><h3>{this.state.title}</h3></Col>\r\n            <Col></Col>\r\n        <Col>{this.state.role==='Student' && now.isBefore( moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && <Button variant=\"primary\" onClick={this.handleSubmit}> {localStorage.getItem(\"role\")==='Student' && this.state.attempted ? \"Re\" :  \"\"} {localStorage.getItem(\"role\")==='Teacher' ? \"Publish\" :  \"Submit\"} Assignment</Button>}</Col>\r\n          </Row>\r\n        </Container>    \r\n        <Divider/>\r\n        <br/>\r\n        <Container>\r\n          <Row>\r\n            <Col><b>Due: </b> <Moment format=\"ll\" date={new Date(this.state.dueDate)}/> at  <Moment format=\"LT\" date={new Date(this.state.dueDate)} /></Col>\r\n            <Col><b>Points:</b>{this.state.points}</Col>\r\n            <Col></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><b>Submission Type:</b>{this.state.type}</Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n          </Row>\r\n          {this.state.attempted && this.state.role==='Student' &&<Row>\r\n            <Col sm='9'> <h4>Submitted...!!!</h4> <a style={{color: \"#094D98\"}} onClick={this.handleClick}>Submission Details</a> <a style={{color: \"#094D98\"}}>Download File</a></Col>\r\n          </Row>}\r\n        </Container> \r\n        <br/> \r\n        <Divider/>\r\n        <br/>\r\n        <Container>\r\n          <Row>\r\n            <Col>{Parser(this.state.content)}</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col>{this.state.role==='Teacher' && now.isBefore( moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && <Button variant=\"primary\" onClick={this.handleCheck}> Grade Assignment</Button>}</Col>\r\n            <Col></Col>\r\n            </Row>\r\n        </Container>    \r\n        <br/>  \r\n        <div>\r\n        {this.state.submit && <Submitassign courseid = {this.props.courseid} assignmentid={this.props.assignmentid} cancelSubmit ={this.handleClose}/>}\r\n        <br/>\r\n        </div>\r\n        {this.state.opensubmission &&  <table  cellpadding=\"0\" cellspacing=\"0\" className=\"table\"  cellSpacing=\"1\" style= {{marginLeft:20 , paddingTop: 0 }}>\r\n              <tr style={{color: \"#094D98\"}}>\r\n              <th>File Name</th>\r\n              <th>Submission time</th>\r\n              <th></th>\r\n              </tr>\r\n            <tbody>{data}</tbody>\r\n            <tr><td></td><td></td><td></td></tr>\r\n      </table>  } \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n//\r\nconst mapStateToProps = state => ({\r\n  assignments : state.assignments,\r\n})\r\n\r\nexport default connect (mapStateToProps, {})(AssignmentSubmission);\r\n "]},"metadata":{},"sourceType":"module"}