{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _fieldValue = require('./fieldValue');\n\nvar reset = function reset(value) {\n  return (0, _fieldValue.makeFieldValue)(value === undefined || value && value.initial === undefined ? {} : {\n    initial: value.initial,\n    value: value.initial\n  });\n};\n/**\n * Sets the initial values into the state and returns a new copy of the state\n */\n\n\nvar resetState = function resetState(values) {\n  return values ? Object.keys(values).reduce(function (accumulator, key) {\n    var value = values[key];\n\n    if (Array.isArray(value)) {\n      accumulator[key] = value.map(function (item) {\n        return (0, _fieldValue.isFieldValue)(item) ? reset(item) : resetState(item);\n      });\n    } else if (value) {\n      if ((0, _fieldValue.isFieldValue)(value)) {\n        accumulator[key] = reset(value);\n      } else if (typeof value === 'object' && value !== null) {\n        accumulator[key] = resetState(value);\n      } else {\n        accumulator[key] = value;\n      }\n    }\n\n    return accumulator;\n  }, {}) : values;\n};\n\nexports.default = resetState;","map":null,"metadata":{},"sourceType":"script"}