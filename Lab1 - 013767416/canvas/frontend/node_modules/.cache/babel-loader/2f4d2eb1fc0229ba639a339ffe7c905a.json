{"ast":null,"code":"import _classCallCheck from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/src/components/CourseDetails/Assignment/GradeAssignment.js\";\nimport React, { Component } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\nimport Moment from 'react-moment';\nimport FileOpen from '../Files/FileOpen';\nimport OpenSubmissionFile from './OpenSubmisseionFile';\n\nvar axios = require('axios');\n\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\n\nvar GradeAssignment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GradeAssignment, _Component);\n\n  function GradeAssignment(props) {\n    var _this;\n\n    _classCallCheck(this, GradeAssignment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GradeAssignment).call(this, props));\n\n    _this.closeFile = function () {\n      _this.setState({\n        fileToOpen: ''\n      });\n    };\n\n    _this.handleOpenFile = function (submissionid, userId) {\n      axios.defaults.withCredentials = true;\n      axios.get('/downloadsubmission', {\n        params: {\n          id: submissionid\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          console.log(res.data);\n          var preview = 'data:application/pdf;base64, ' + res.data;\n\n          _this.setState({\n            fileToOpen: preview\n          });\n\n          _this.setState({\n            open: true,\n            userid: userId\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      studentdata: [],\n      fileToOpen: '',\n      open: false,\n      studentid: ''\n    };\n    return _this;\n  }\n\n  _createClass(GradeAssignment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.defaults.withCredentials = true;\n      axios.get('/studentsubmissions', {\n        params: {\n          id: this.props.assignmentid\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this2.setState({\n            studentdata: res.data\n          });\n\n          console.log(res.data);\n          console.log(_this2.state.studentdata);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          pageNumber = _this$state.pageNumber,\n          numPages = _this$state.numPages;\n      var data = Array.from(this.state.studentdata).map(function (data, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, data.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this3.handleOpenFile(data.submissionid, data.userid);\n          },\n          download: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, data.filename)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \" \", React.createElement(Moment, {\n          format: \"lll\",\n          date: new Date(data.submissiontime),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, data.Graded));\n      });\n      if (this.state.fileToOpen) return React.createElement(OpenSubmissionFile, {\n        assignmentid: this.props.assignmentid,\n        closeFile: this.closeFile,\n        fileToOpen: this.state.fileToOpen,\n        points: this.props.points,\n        userid: this.state.userid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          cellpadding: \"0\",\n          cellspacing: \"0\",\n          className: \"table\",\n          cellSpacing: \"0\",\n          style: {\n            marginLeft: 20,\n            paddingTop: 0,\n            maxWidth: 800\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          style: {\n            color: \"#094D98\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Student Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Submission\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Submission Time\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Graded\")), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, data), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return GradeAssignment;\n}(Component);\n\n;\nexport default GradeAssignment;","map":{"version":3,"sources":["/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/src/components/CourseDetails/Assignment/GradeAssignment.js"],"names":["React","Component","Document","Page","pdfjs","Moment","FileOpen","OpenSubmissionFile","axios","require","GlobalWorkerOptions","workerSrc","version","GradeAssignment","props","closeFile","setState","fileToOpen","handleOpenFile","submissionid","userId","defaults","withCredentials","get","params","id","then","res","status","console","log","data","preview","open","userid","state","studentdata","studentid","assignmentid","pageNumber","numPages","Array","from","map","key","name","filename","Date","submissiontime","Graded","points","marginLeft","paddingTop","maxWidth","color"],"mappings":"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","sourcesContent":["\n\nimport React,{Component} from 'react'\nimport {Document, Page} from 'react-pdf';\nimport {pdfjs} from 'react-pdf';\n\nimport Moment from 'react-moment';\nimport FileOpen from '../Files/FileOpen';\nimport OpenSubmissionFile from './OpenSubmisseionFile';\n\nconst axios = require('axios');\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass GradeAssignment extends Component{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            studentdata:[],\n            fileToOpen:'',\n            open:false,\n            studentid:'',\n        }\n    }\n    closeFile = () => \n    {\n      this.setState({fileToOpen : ''});\n    };\n    componentDidMount()\n    {   \n    axios.defaults.withCredentials = true;\n    axios.get('/studentsubmissions', {params : {id : this.props.assignmentid}} ).then(\n        res => {\n        if(res.status === 200)\n        {\n            this.setState({\n                studentdata:res.data\n            });\n            console.log(res.data);\n            console.log(this.state.studentdata);\n        }\n        }\n    )\n    }\n    \n    handleOpenFile = (submissionid, userId) => \n    {\n      axios.defaults.withCredentials = true;\n      axios.get('/downloadsubmission',  {params : {id :submissionid}}).then(\n        res => {\n          if(res.status ===200)\n            {\n              console.log(res.data);\n              let preview = 'data:application/pdf;base64, ' + res.data;\n              this.setState({\n                fileToOpen: preview})\n              this.setState({open:true,userid:userId})\n            }\n        }\n      )   \n   };\n    render()\n    {\n        const { pageNumber, numPages } = this.state;\n        var data =  Array.from(this.state.studentdata).map((data, key) => {\n            return (\n              <tr key = {key} >                              \n              <td >{data.name}</td>\n              <td><a onClick={() =>this.handleOpenFile(data.submissionid, data.userid)} download>{data.filename}</a></td>\n              <td> <Moment format=\"lll\" date={new Date(data.submissiontime)}/> </td>          \n              <td >{data.Graded}</td>\n              </tr>\n            )\n            });\n\n        if(this.state.fileToOpen)\n           return (<OpenSubmissionFile  assignmentid={this.props.assignmentid} closeFile={this.closeFile} fileToOpen= {this.state.fileToOpen} points={this.props.points} userid={this.state.userid}/>)\n        else {           \n        return(\n        <div>\n             <table  cellpadding=\"0\" cellspacing=\"0\" className=\"table\"  cellSpacing=\"0\" style= {{marginLeft:20 , paddingTop: 0 , maxWidth:800}}>\n              <tr style={{color: \"#094D98\"}}>\n              <th>Student Name</th>\n              <th>Submission</th>\n              <th>Submission Time</th>\n              <th>Graded</th>\n              </tr>\n            <tbody>{data}</tbody>\n            <tr><td></td><td></td><td></td><td></td></tr>\n            </table>   \n           \n        </div>\n\n        )\n        }\n    }\n};\n\nexport default GradeAssignment;"]},"metadata":{},"sourceType":"module"}