{"ast":null,"code":"import _classCallCheck from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/src/components/Grades/Grades.js\";\nimport React, { Component } from 'react';\nimport \"react-web-tabs/dist/react-web-tabs.css\";\nimport Button from 'react-bootstrap/Button';\nimport Search from '../Search';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport Moment from 'react-moment';\nimport Grid from '@material-ui/core/Grid';\nimport MiniDrawer from '../Layout/MiniDrawer';\nimport Sidebar from '../Layout/Sidebar';\nimport Appbar from '../Layout/Appbar';\nimport MenuList from '../Layout/MenuList';\nimport { Typography } from '@material-ui/core';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css';\n\nvar axios = require('axios');\n\nvar assignmentsgrades =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(assignmentsgrades, _Component);\n\n  function assignmentsgrades(props) {\n    var _this;\n\n    _classCallCheck(this, assignmentsgrades);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(assignmentsgrades).call(this, props));\n\n    _this.toggleComponent = function () {\n      _this.setState(function (state) {\n        return {\n          show: !state.show\n        };\n      });\n    };\n\n    _this.componentDidMount = function () {\n      axios.defaults.withCredentials = true;\n      axios.get('/coursedetails', {\n        params: {\n          id: localStorage.getItem(\"courseid\")\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this.setState({\n            name: res.data.name,\n            term: res.data.term,\n            nickname: res.data.nickname,\n            dept: res.data.dept\n          });\n        }\n      });\n      axios.defaults.withCredentials = true;\n      axios.get('/submissions', {\n        params: {\n          id: localStorage.getItem(\"courseid\")\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this.setState({\n            name: res.data.name,\n            term: res.data.term,\n            nickname: res.data.nickname,\n            dept: res.data.dept\n          });\n        }\n      });\n      axios.defaults.withCredentials = true;\n      axios.get('/assignmentnames', {\n        params: {\n          id: localStorage.getItem(\"courseid\")\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this.setState({\n            assignments: res.data\n          }); // console.log( this.state.assignments);\n\n        }\n      });\n    };\n\n    _this.state = {\n      show: false,\n      count: 0,\n      role: localStorage.getItem(\"role\"),\n      assignmentsgrades: [],\n      username: '',\n      totalPoints: '',\n      term: '',\n      name: '',\n      nickname: '',\n      dept: '',\n      assignments: [],\n      quizgrades: []\n    };\n    return _this;\n  }\n\n  _createClass(assignmentsgrades, [{\n    key: \"calculateTotal\",\n    value: function calculateTotal(marks) {\n      console.log('hello');\n      var total = this.state.totalPoints + marks;\n      this.setState({\n        totalPoints: total\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.defaults.withCredentials = true;\n      axios.get('/assignmentgrades', {\n        params: {\n          id: localStorage.getItem(\"courseid\")\n        }\n      }).then(function (res) {\n        if (res.status === 200) _this2.setState({\n          assignmentsgrades: res.data.grades,\n          username: res.data.name\n        });\n      });\n      axios.defaults.withCredentials = true;\n      axios.get('/quizgrades', {\n        params: {\n          id: localStorage.getItem(\"courseid\")\n        }\n      }).then(function (res) {\n        if (res.status === 200) _this2.setState({\n          quizgrades: res.data.grades,\n          username: res.data.name\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n\n    /*getColumns() {\n      /*var data1 =  Array.from(this.state.assignments).map((assign, key) => {\n        console.log(assign.name);\n         return assign.name;\n      }); \n     // console.log(data1);\n            const data = {\n      initial_data: [\n        {\n          \"Node JS\" : \"Supriya\",\n          \"React JS\" : \"Tej\"\n        },        \n      ]\n    };\n      return Object.keys(data.initial_data[0]).map(value => {\n        return {\n          Header: value,\n          accessor: value\n        };\n      });\n    }*/\n    value: function render() {\n      var redirectVar = null;\n      if (!cookie.load('cookie')) redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n      var show = this.state.show;\n      var assignmentTotalMarks = 0;\n      var assignmentMarksObtained = 0;\n      var assignmentPercentages = 0;\n      var quizTotalMarks = 0;\n      var quizMarksObtained = 0;\n      var quizPercentages = 0; //const columns = this.getColumns();\n\n      var data = Array.from(this.state.assignmentsgrades).map(function (assign, key) {\n        assignmentTotalMarks = assignmentTotalMarks + assign.points;\n        assignmentMarksObtained = assignmentMarksObtained + assign.marks_obtained;\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, assign.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \" \", React.createElement(Moment, {\n          format: \"ll\",\n          date: new Date(assign.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), \" at  \", React.createElement(Moment, {\n          format: \"LT\",\n          date: new Date(assign.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, assign.marks_obtained), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, assign.points));\n      });\n      var quizdata = Array.from(this.state.quizgrades).map(function (quiz, key) {\n        quizTotalMarks = quizTotalMarks + quiz.marks;\n        quizMarksObtained = quizMarksObtained + quiz.marks_obtained;\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, quiz.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \" \", React.createElement(Moment, {\n          format: \"ll\",\n          date: new Date(quiz.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }), \" at  \", React.createElement(Moment, {\n          format: \"LT\",\n          date: new Date(quiz.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, quiz.marks_obtained), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, quiz.marks));\n      });\n      assignmentPercentages = assignmentMarksObtained / assignmentTotalMarks * 100;\n      if (isNaN(assignmentPercentages)) assignmentPercentages = 0;\n      quizPercentages = quizMarksObtained / quizTotalMarks * 100;\n      if (isNaN(quizPercentages)) assignmentPercentages = 0;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, redirectVar, React.createElement(Appbar, {\n        name: this.state.name,\n        dept: this.state.dept,\n        nickname: this.state.nickname,\n        term: this.state.term,\n        tag: \"assignmentsgrades\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 0.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(MiniDrawer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 1.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(MenuList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginLeft: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), localStorage.getItem(\"role\") === 'Student' && React.createElement(Typography, {\n        variant: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Grades for \", this.state.username), localStorage.getItem(\"role\") === 'Student' && React.createElement(Table, {\n        size: \"sm\",\n        style: {\n          marginTop: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        style: {\n          color: \"#094D98\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Due Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Score\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Out Of\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, data, quizdata, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Assignment\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \" \", assignmentPercentages, \"%\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \" \", assignmentMarksObtained, \"/\", assignmentTotalMarks)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Quiz\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \" \", quizPercentages, \"%\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \" \", quizMarksObtained, \"/\", quizTotalMarks)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })))))), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return assignmentsgrades;\n}(Component);\n\nexport default assignmentsgrades;","map":{"version":3,"sources":["/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/src/components/Grades/Grades.js"],"names":["React","Component","Button","Search","Container","Row","Col","Table","Moment","Grid","MiniDrawer","Sidebar","Appbar","MenuList","Typography","cookie","Redirect","ReactTable","axios","require","assignmentsgrades","props","toggleComponent","setState","state","show","componentDidMount","defaults","withCredentials","get","params","id","localStorage","getItem","then","res","status","name","data","term","nickname","dept","assignments","count","role","username","totalPoints","quizgrades","marks","console","log","total","grades","redirectVar","load","assignmentTotalMarks","assignmentMarksObtained","assignmentPercentages","quizTotalMarks","quizMarksObtained","quizPercentages","Array","from","map","assign","key","points","marks_obtained","Date","dueDate","quizdata","quiz","title","isNaN","marginLeft","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"react-web-tabs/dist/react-web-tabs.css\";\nimport Button from 'react-bootstrap/Button'\nimport Search from '../Search';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport Moment from 'react-moment';\nimport Grid from '@material-ui/core/Grid';\nimport MiniDrawer from '../Layout/MiniDrawer';\nimport Sidebar from '../Layout/Sidebar';\nimport Appbar from '../Layout/Appbar';\nimport MenuList from '../Layout/MenuList';\nimport { Typography } from '@material-ui/core';\nimport cookie from 'react-cookies';\nimport {Redirect} from 'react-router';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'\nconst axios = require('axios');\n\nclass assignmentsgrades extends Component \n{\n    constructor(props)\n    {\n      super(props);\n      this.state = {\n        show: false,\n        count: 0,\n        role:localStorage.getItem(\"role\"),\n        assignmentsgrades:[],\n        username:'',\n        totalPoints:'',\n        term:'',\n        name:'',\n        nickname:'',\n        dept:'',\n        assignments:[],\n        quizgrades:[]\n      };\n    }\n      toggleComponent = () => {\n        this.setState(state => ({\n          show: !state.show\n        }));\n      };\n      calculateTotal(marks)\n      {\n        console.log('hello')\n        var total = this.state.totalPoints+ marks;\n        this.setState({totalPoints: total})\n      }\n      componentWillMount()\n      {\n        \n        axios.defaults.withCredentials = true;\n        axios.get('/assignmentgrades',  {params : {id :localStorage.getItem(\"courseid\")}} ).then(\n          res => {\n            if(res.status ===200)\n                this.setState({assignmentsgrades: res.data.grades,\n                  username:res.data.name\n                });\n          }\n        )\n                \n        axios.defaults.withCredentials = true;\n        axios.get('/quizgrades',  {params : {id :localStorage.getItem(\"courseid\")}} ).then(\n          res => {\n            if(res.status ===200)\n                this.setState({quizgrades: res.data.grades,\n                  username:res.data.name\n                });\n          }\n        )\n      }\n      componentDidMount = () => {\n        axios.defaults.withCredentials = true;\n        axios.get('/coursedetails', {params : {id :localStorage.getItem(\"courseid\")}}  ).then(\n          res => {\n            if(res.status ===200)\n            {\n                this.setState(\n                  {\n                    name:res.data.name,\n                    term:res.data.term,\n                    nickname:res.data.nickname,\n                    dept:res.data.dept\n                  });     \n            }    \n          }\n        )\n        axios.defaults.withCredentials = true;\n        axios.get('/submissions', {params : {id :localStorage.getItem(\"courseid\")}}  ).then(\n          res => {\n            if(res.status ===200)\n            {\n                this.setState(\n                  {\n                    name:res.data.name,\n                    term:res.data.term,\n                    nickname:res.data.nickname,\n                    dept:res.data.dept\n                  });     \n            }    \n          }\n        )\n        axios.defaults.withCredentials = true;\n        axios.get('/assignmentnames', {params : {id :localStorage.getItem(\"courseid\")}}  ).then(\n          res => {\n            if(res.status ===200)\n            {\n                this.setState(\n                  {\n                     assignments: res.data\n                  });     \n              // console.log( this.state.assignments);\n            }    \n          }\n        )  \n      }\n\n      /*getColumns() {\n        /*var data1 =  Array.from(this.state.assignments).map((assign, key) => {\n          console.log(assign.name);\n           return assign.name;\n        }); \n       // console.log(data1);\n              const data = {\n        initial_data: [\n          {\n            \"Node JS\" : \"Supriya\",\n            \"React JS\" : \"Tej\"\n          },        \n        ]\n      };\n        return Object.keys(data.initial_data[0]).map(value => {\n          return {\n            Header: value,\n            accessor: value\n          };\n        });\n      }*/\n\n  render() {\n    let redirectVar = null;\n    if(!cookie.load('cookie'))\n        redirectVar = <Redirect to= \"/login\"/>\n    const { show } = this.state\n    var assignmentTotalMarks =0; \n    var assignmentMarksObtained=0;\n    var assignmentPercentages=0;\n    var quizTotalMarks =0; \n    var quizMarksObtained=0;\n    var quizPercentages=0;\n    //const columns = this.getColumns();\n        var data =  Array.from(this.state.assignmentsgrades).map((assign, key) => {\n          assignmentTotalMarks = assignmentTotalMarks +  assign.points;\n          assignmentMarksObtained = assignmentMarksObtained +  assign.marks_obtained;\n            return (\n              <tr key = {key} >                   \n              <td >{assign.name}</td>\n              <td> <Moment format=\"ll\" date={new Date(assign.dueDate)}/> at  <Moment format=\"LT\" date={new Date(assign.dueDate)} /></td>\n              <td>{assign.marks_obtained}</td>\n              <td>{assign.points}</td>\n              </tr>\n            )\n        });  \n        var quizdata =  Array.from(this.state.quizgrades).map((quiz, key) => {\n          quizTotalMarks = quizTotalMarks +  quiz.marks;\n          quizMarksObtained = quizMarksObtained +  quiz.marks_obtained;\n            return (\n              <tr key = {key} >                   \n              <td >{quiz.title}</td>\n              <td> <Moment format=\"ll\" date={new Date(quiz.dueDate)}/> at  <Moment format=\"LT\" date={new Date(quiz.dueDate)} /></td>\n              <td>{quiz.marks_obtained}</td>\n              <td>{quiz.marks}</td>\n              </tr>\n            )\n        }); \n        assignmentPercentages=(assignmentMarksObtained/assignmentTotalMarks)*100;\n        if(isNaN(assignmentPercentages))\n          assignmentPercentages = 0;\n        quizPercentages=(quizMarksObtained/quizTotalMarks)*100;\n          if(isNaN(quizPercentages))\n            assignmentPercentages = 0;\n      return (\n        <div>{redirectVar}\n        <Appbar name={this.state.name}  dept={this.state.dept}  nickname={this.state.nickname}  term={this.state.term}\n        tag=\"assignmentsgrades\" />\n        <Grid container>   \n          <Grid item xs={0.5}>\n            <MiniDrawer/>\n          </Grid>  \n          <Grid item xs={1.5}><br/>\n            <MenuList />\n          </Grid>                  \n        <Grid item xs={8}>\n        <br/>\n        <div style={{marginLeft:30}}>\n        <br/><br/><br/>\n        {localStorage.getItem(\"role\")==='Student' && <Typography variant=\"headline\">Grades for {this.state.username}</Typography>}\n        {localStorage.getItem(\"role\")==='Student' && <Table  size=\"sm\" style={{marginTop:70}}>\n          <thead style={{color: \"#094D98\"}}>\n              <tr>\n              <th>Name</th>\n              <th>Due Date</th>\n              <th>Score</th>\n              <th>Out Of</th>\n              </tr>\n          </thead>\n          <tbody>\n              {data}\n              {quizdata}\n              <tr>                   \n              <th>Assignment</th>\n              <td></td>\n              <td> {assignmentPercentages}%</td>\n              <td> {assignmentMarksObtained}/{assignmentTotalMarks}</td>\n              </tr>\n              <tr>                   \n              <th>Quiz</th>\n              <td></td>\n              <td> {quizPercentages}%</td>\n              <td> {quizMarksObtained}/{quizTotalMarks}</td>\n              </tr>\n\n              <tr><td></td><td></td><td></td><td></td></tr>\n          </tbody>\n      </Table> }\n        </div>\n      </Grid>\n       <Grid item xs={1}>\n       <Sidebar/>\n       </Grid>\n     </Grid>\n   </div>        \n      );    \n    \n  }\n}\n\nexport default assignmentsgrades;\n"]},"metadata":{},"sourceType":"module"}