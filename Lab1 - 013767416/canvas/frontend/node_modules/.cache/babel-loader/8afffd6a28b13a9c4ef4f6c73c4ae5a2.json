{"ast":null,"code":"import _classCallCheck from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/src/components/CourseDetails/Assignment/AssignmentSubmission.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Button from 'react-bootstrap/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Submitassign from './Submitassign';\nimport Parser from 'html-react-parser';\nimport moment from 'moment';\nimport GradeAssignment from './GradeAssignment';\nimport Moment from 'react-moment';\n\nvar axios = require('axios');\n\nvar AssignmentSubmission =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AssignmentSubmission, _Component);\n\n  function AssignmentSubmission(props) {\n    var _this;\n\n    _classCallCheck(this, AssignmentSubmission);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignmentSubmission).call(this, props));\n\n    _this.cancelSubmit = function () {\n      _this.setState({\n        submit: false,\n        attempted: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        submit: false\n      });\n    };\n\n    _this.handleSubmit = function () {\n      if (localStorage.getItem(\"role\") === 'Teacher') {\n        axios.defaults.withCredentials = true;\n        axios.put('/updateAssignment', {\n          params: {\n            id: _this.props.assignmentid\n          }\n        }).then(function (res) {\n          if (res.status === 200) {\n            console.log(\"updated\");\n\n            _this.setState({\n              submit: true\n            });\n          }\n        });\n      } else _this.setState({\n        submit: true\n      });\n    };\n\n    _this.handleCheck = function () {\n      if (localStorage.getItem(\"role\") === 'Teacher') {\n        _this.setState({\n          grade: true\n        });\n      }\n    };\n\n    _this.state = {\n      title: '',\n      dueDate: '',\n      content: '',\n      points: '',\n      type: '',\n      submit: false,\n      role: localStorage.getItem(\"role\"),\n      attempted: false,\n      submissiontime: '',\n      filename: '',\n      grade: false\n    };\n    return _this;\n  }\n\n  _createClass(AssignmentSubmission, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.defaults.withCredentials = true;\n      axios.get('/assignmentinfo', {\n        params: {\n          id: this.props.assignmentid\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this2.setState({\n            title: res.data.assignmentdata.name,\n            points: res.data.assignmentdata.points,\n            content: res.data.assignmentdata.content,\n            type: res.data.assignmentdata.submissionType,\n            dueDate: res.data.assignmentdata.dueDate\n          });\n        }\n      });\n      axios.get('/submissiondetails', {\n        params: {\n          id: this.props.assignmentid\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          if (res.data.submissiondata === 'No Submission') _this2.setState({\n            attempted: false\n          });else {\n            _this2.setState({\n              attempted: true,\n              filename: res.data.submissiondata.filename,\n              submissiontime: res.data.submissiondata.submissiontime\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var now = moment();\n\n      if (this.state.grade) {\n        return React.createElement(GradeAssignment, {\n          points: this.state.points,\n          assignmentid: this.props.assignmentid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"center-align container mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, this.state.title)), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, this.state.role === 'Student' && now.isBefore(moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && React.createElement(Button, {\n          variant: \"primary\",\n          onClick: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \" \", localStorage.getItem(\"role\") === 'Student' && this.state.attempted ? \"Re\" : \"\", \" \", localStorage.getItem(\"role\") === 'Teacher' ? \"Publish\" : \"Submit\", \" Assignment\")))), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Due: \"), \" \", React.createElement(Moment, {\n          format: \"ll\",\n          date: new Date(this.state.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), \" at  \", React.createElement(Moment, {\n          format: \"LT\",\n          date: new Date(this.state.dueDate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        })), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Points:\"), this.state.points), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Submission Type:\"), this.state.type), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        })), this.state.attempted && this.state.role === 'Student' && React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \" \", React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Submitted...!!!\"), \" \", React.createElement(\"a\", {\n          style: {\n            color: \"#094D98\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Submission Details\"), \" \", React.createElement(\"a\", {\n          style: {\n            color: \"#094D98\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Download File\")))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, Parser(this.state.content))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, this.state.role === 'Teacher' && now.isBefore(moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && React.createElement(Button, {\n          variant: \"primary\",\n          onClick: this.handleCheck,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \" Grade Assignment\")), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, this.state.submit && React.createElement(Submitassign, {\n          courseid: this.props.courseid,\n          assignmentid: this.props.assignmentid,\n          cancelSubmit: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return AssignmentSubmission;\n}(Component);\n\nexport default AssignmentSubmission;","map":{"version":3,"sources":["/Users/supriyajain/Desktop/273/canvas/Lab1 - 013767416/canvas/frontend/src/components/CourseDetails/Assignment/AssignmentSubmission.js"],"names":["React","Component","Container","Row","Col","Button","Divider","Submitassign","Parser","moment","GradeAssignment","Moment","axios","require","AssignmentSubmission","props","cancelSubmit","setState","submit","attempted","handleClose","handleSubmit","localStorage","getItem","defaults","withCredentials","put","params","id","assignmentid","then","res","status","console","log","handleCheck","grade","state","title","dueDate","content","points","type","role","submissiontime","filename","get","data","assignmentdata","name","submissionType","submissiondata","now","isBefore","Date","color","courseid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Button from 'react-bootstrap/Button'\nimport Divider from '@material-ui/core/Divider';\nimport Submitassign from './Submitassign';\nimport Parser from 'html-react-parser';\nimport moment from 'moment';\nimport GradeAssignment from './GradeAssignment';\nimport Moment from 'react-moment';\n\nconst axios = require('axios');\n\nclass AssignmentSubmission extends Component \n{\n\n  constructor(props)\n  {\n      super(props);\n      this.state = {\n        title:'',\n        dueDate:'',\n        content:'',\n        points:'',\n        type:'',\n        submit:false,\n        role:localStorage.getItem(\"role\"),\n        attempted:false,\n        submissiontime:'',\n        filename:'',\n        grade:false\n        \n      };\n  }\n  cancelSubmit = () => {\n    this.setState({submit : false,attempted:true\n    });\n  };\n  handleClose = () => {\n    this.setState({submit : false\n    });\n  };\n  handleSubmit = () => {\n    if(localStorage.getItem(\"role\")==='Teacher')\n    {\n      axios.defaults.withCredentials = true;\n      axios.put('/updateAssignment', {params : {id : this.props.assignmentid}} ).then(\n        res => {\n          if(res.status === 200)\n          {\n              console.log(\"updated\");\n              this.setState({submit:true});\n          }\n        }\n      )\n    }\n    else\n      this.setState({submit:true});   \n  };\n\n  handleCheck=()=>\n  {\n    if(localStorage.getItem(\"role\")==='Teacher')\n    {\n      this.setState({grade:true})\n    }   \n  }\n\n  componentDidMount()\n  {   \n    axios.defaults.withCredentials = true;\n    axios.get('/assignmentinfo', {params : {id : this.props.assignmentid}} ).then(\n      res => {\n        if(res.status === 200)\n        {\n            this.setState({\n              title: res.data.assignmentdata.name,\n              points:res.data.assignmentdata.points,\n              content:res.data.assignmentdata.content,\n              type:res.data.assignmentdata.submissionType,\n              dueDate:res.data.assignmentdata.dueDate\n\n            });\n        }\n      }\n    )\n    axios.get('/submissiondetails', {params : {id : this.props.assignmentid}} ).then(\n      res => {\n        if(res.status === 200)\n        {\n            if(res.data.submissiondata === 'No Submission')               \n              this.setState({ attempted:false});\n            else\n            {\n              this.setState({ attempted:true,\n              filename:res.data.submissiondata.filename,\n              submissiontime:res.data.submissiondata.submissiontime});\n            }            \n        }\n      }\n    )\n  }\n\n  render() {\n    const now = moment();\n      if(this.state.grade){\n        return(<GradeAssignment  points={this.state.points} assignmentid={this.props.assignmentid}/>);\n      }\n      else{\n      return (  \n        <div className=\"center-align container mt-5\">\n        <Container>\n          <Row>\n            <Col><h3>{this.state.title}</h3></Col>\n            <Col></Col>\n        <Col>{this.state.role==='Student' && now.isBefore( moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && <Button variant=\"primary\" onClick={this.handleSubmit}> {localStorage.getItem(\"role\")==='Student' && this.state.attempted ? \"Re\" :  \"\"} {localStorage.getItem(\"role\")==='Teacher' ? \"Publish\" :  \"Submit\"} Assignment</Button>}</Col>\n          </Row>\n        </Container>    \n        <Divider/>\n        <br/>\n        <Container>\n          <Row>\n            <Col><b>Due: </b> <Moment format=\"ll\" date={new Date(this.state.dueDate)}/> at  <Moment format=\"LT\" date={new Date(this.state.dueDate)} /></Col>\n            <Col><b>Points:</b>{this.state.points}</Col>\n            <Col></Col>\n          </Row>\n          <Row>\n            <Col><b>Submission Type:</b>{this.state.type}</Col>\n            <Col></Col>\n            <Col></Col>\n            <Col></Col>\n          </Row>\n          {this.state.attempted && this.state.role==='Student' &&<Row>\n            <Col sm='9'> <h4>Submitted...!!!</h4> <a style={{color: \"#094D98\"}}>Submission Details</a> <a style={{color: \"#094D98\"}}>Download File</a></Col>\n          </Row>}\n        </Container> \n        <br/> \n        <Divider/>\n        <br/>\n        <Container>\n          <Row>\n            <Col>{Parser(this.state.content)}</Col>\n          </Row>\n          <Row>\n            <Col></Col>\n            <Col>{this.state.role==='Teacher' && now.isBefore( moment(this.state.dueDate, 'YYYY-MM-DDTHH:mm:ss.SSSZ')) && <Button variant=\"primary\" onClick={this.handleCheck}> Grade Assignment</Button>}</Col>\n            <Col></Col>\n            </Row>\n        </Container>    \n        <br/>  \n        <div>\n        {this.state.submit && <Submitassign courseid = {this.props.courseid} assignmentid={this.props.assignmentid} cancelSubmit ={this.handleClose}/>}\n        <br/>\n        </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default AssignmentSubmission;\n"]},"metadata":{},"sourceType":"module"}